// Generated by purs version 0.15.15
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Generic_Rep from "../Data.Generic.Rep/index.js";
import * as Data_Int from "../Data.Int/index.js";
import * as Data_Lens_Getter from "../Data.Lens.Getter/index.js";
import * as Data_Lens_Internal_Forget from "../Data.Lens.Internal.Forget/index.js";
import * as Data_Lens_Record from "../Data.Lens.Record/index.js";
import * as Data_Lens_Setter from "../Data.Lens.Setter/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Profunctor_Strong from "../Data.Profunctor.Strong/index.js";
import * as Data_Ring from "../Data.Ring/index.js";
import * as Data_Semiring from "../Data.Semiring/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Show_Generic from "../Data.Show.Generic/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Aff_Class from "../Effect.Aff.Class/index.js";
import * as Halogen_Component from "../Halogen.Component/index.js";
import * as Halogen_HTML_Core from "../Halogen.HTML.Core/index.js";
import * as Halogen_HTML_Elements from "../Halogen.HTML.Elements/index.js";
import * as Halogen_HTML_Events from "../Halogen.HTML.Events/index.js";
import * as Halogen_Query_HalogenM from "../Halogen.Query.HalogenM/index.js";
import * as Type_Proxy from "../Type.Proxy/index.js";
var $runtime_lazy = function (name, moduleName, init) {
    var state = 0;
    var val;
    return function (lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var genericShowConstructor = /* #__PURE__ */ Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments);
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);
var prop = /* #__PURE__ */ Data_Lens_Record.prop({
    reflectSymbol: function () {
        return "isPondering";
    }
})()();
var prop1 = /* #__PURE__ */ Data_Lens_Record.prop({
    reflectSymbol: function () {
        return "count";
    }
})()();
var bind = /* #__PURE__ */ Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM);
var use = /* #__PURE__ */ Data_Lens_Getter.use(Halogen_Query_HalogenM.monadStateHalogenM);
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM);
var when = /* #__PURE__ */ Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM);
var pure = /* #__PURE__ */ Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM);
var addModifying = /* #__PURE__ */ Data_Lens_Setter.addModifying(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Semiring.semiringInt);
var subModifying = /* #__PURE__ */ Data_Lens_Setter.subModifying(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Ring.ringInt);
var map = /* #__PURE__ */ Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM);
var assign = /* #__PURE__ */ Data_Lens_Setter.assign(Halogen_Query_HalogenM.monadStateHalogenM);
var for_ = /* #__PURE__ */ Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe);
var mulModifying = /* #__PURE__ */ Data_Lens_Setter.mulModifying(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Semiring.semiringInt);
var GetCount = /* #__PURE__ */ (function () {
    function GetCount(value0) {
        this.value0 = value0;
    };
    GetCount.create = function (value0) {
        return new GetCount(value0);
    };
    return GetCount;
})();
var DoNothing = /* #__PURE__ */ (function () {
    function DoNothing(value0) {
        this.value0 = value0;
    };
    DoNothing.create = function (value0) {
        return new DoNothing(value0);
    };
    return DoNothing;
})();
var Ponder = /* #__PURE__ */ (function () {
    function Ponder(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Ponder.create = function (value0) {
        return function (value1) {
            return new Ponder(value0, value1);
        };
    };
    return Ponder;
})();
var Increment = /* #__PURE__ */ (function () {
    function Increment(value0) {
        this.value0 = value0;
    };
    Increment.create = function (value0) {
        return new Increment(value0);
    };
    return Increment;
})();
var Decrement = /* #__PURE__ */ (function () {
    function Decrement(value0) {
        this.value0 = value0;
    };
    Decrement.create = function (value0) {
        return new Decrement(value0);
    };
    return Decrement;
})();
var Equals10 = /* #__PURE__ */ (function () {
    function Equals10() {

    };
    Equals10.value = new Equals10();
    return Equals10;
})();
var FinishedPondering = /* #__PURE__ */ (function () {
    function FinishedPondering() {

    };
    FinishedPondering.value = new FinishedPondering();
    return FinishedPondering;
})();
var CountChanged = /* #__PURE__ */ (function () {
    function CountChanged() {

    };
    CountChanged.value = new CountChanged();
    return CountChanged;
})();
var SetValue = /* #__PURE__ */ (function () {
    function SetValue(value0) {
        this.value0 = value0;
    };
    SetValue.create = function (value0) {
        return new SetValue(value0);
    };
    return SetValue;
})();
var Double = /* #__PURE__ */ (function () {
    function Double() {

    };
    Double.value = new Double();
    return Double;
})();
var Quadruple = /* #__PURE__ */ (function () {
    function Quadruple() {

    };
    Quadruple.value = new Quadruple();
    return Quadruple;
})();
var genericOutput_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return Equals10.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return FinishedPondering.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return CountChanged.value;
        };
        throw new Error("Failed pattern match at Test.Component.Counter (line 56, column 1 - line 56, column 33): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof Equals10) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof FinishedPondering) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
        };
        if (x instanceof CountChanged) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
        };
        throw new Error("Failed pattern match at Test.Component.Counter (line 56, column 1 - line 56, column 33): " + [ x.constructor.name ]);
    }
};
var showOutput = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(genericOutput_)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "Equals10";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "FinishedPondering";
        }
    }))(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "CountChanged";
        }
    }))))
};
var genericAction_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new SetValue(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return Double.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return Quadruple.value;
        };
        throw new Error("Failed pattern match at Test.Component.Counter (line 45, column 1 - line 45, column 33): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof SetValue) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof Double) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
        };
        if (x instanceof Quadruple) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
        };
        throw new Error("Failed pattern match at Test.Component.Counter (line 45, column 1 - line 45, column 33): " + [ x.constructor.name ]);
    }
};
var showAction = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(genericAction_)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
        reflectSymbol: function () {
            return "SetValue";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "Double";
        }
    }))(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "Quadruple";
        }
    }))))
};
var eqOutput = {
    eq: function (x) {
        return function (y) {
            if (x instanceof Equals10 && y instanceof Equals10) {
                return true;
            };
            if (x instanceof FinishedPondering && y instanceof FinishedPondering) {
                return true;
            };
            if (x instanceof CountChanged && y instanceof CountChanged) {
                return true;
            };
            return false;
        };
    }
};
var eqAction = {
    eq: function (x) {
        return function (y) {
            if (x instanceof SetValue && y instanceof SetValue) {
                return x.value0 === y.value0;
            };
            if (x instanceof Double && y instanceof Double) {
                return true;
            };
            if (x instanceof Quadruple && y instanceof Quadruple) {
                return true;
            };
            return false;
        };
    }
};
var render = function (state) {
    return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.input([ Halogen_HTML_Events.onValueChange(SetValue.create) ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(Data_Function["const"](Double.value)) ])([ Halogen_HTML_Core.text("Double") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(Data_Function["const"](Quadruple.value)) ])([ Halogen_HTML_Core.text("Quadruple") ]), Halogen_HTML_Elements.h2_([ Halogen_HTML_Core.text("count = " + show(state.count)) ]), Halogen_HTML_Core.text((function () {
        if (state.isPondering) {
            return "Pondering...";
        };
        return "";
    })()) ]);
};
var initialState = function (v) {
    return {
        count: 0,
        isPondering: true
    };
};
var _isPondering = function (dictStrong) {
    return prop(Type_Proxy["Proxy"].value)(dictStrong);
};
var _isPondering1 = /* #__PURE__ */ _isPondering(Data_Profunctor_Strong.strongFn);
var _count = function (dictStrong) {
    return prop1(Type_Proxy["Proxy"].value)(dictStrong);
};
var _count1 = /* #__PURE__ */ _count(Data_Lens_Internal_Forget.strongForget);
var _count2 = /* #__PURE__ */ _count(Data_Profunctor_Strong.strongFn);
var componentSpec = function (dictMonadAff) {
    var liftAff = Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff));
    var outputOnCountChange = function (ma) {
        return bind(use(_count1))(function (count) {
            return bind(ma)(function (a) {
                return bind(use(_count1))(function (count$prime) {
                    return discard(when(count !== count$prime)(Halogen_Query_HalogenM.raise(CountChanged.value)))(function () {
                        return discard(when(count$prime === 10)(Halogen_Query_HalogenM.raise(Equals10.value)))(function () {
                            return pure(a);
                        });
                    });
                });
            });
        });
    };
    var handleQuery = function ($117) {
        return outputOnCountChange((function (v) {
            if (v instanceof Increment) {
                return discard(addModifying(_count2)(1))(function () {
                    return pure(new Data_Maybe.Just(v.value0));
                });
            };
            if (v instanceof Decrement) {
                return discard(subModifying(_count2)(1))(function () {
                    return pure(new Data_Maybe.Just(v.value0));
                });
            };
            if (v instanceof GetCount) {
                return map(function ($118) {
                    return Data_Maybe.Just.create(v.value0($118));
                })(use(_count1));
            };
            if (v instanceof DoNothing) {
                return pure(new Data_Maybe.Just(v.value0));
            };
            if (v instanceof Ponder) {
                return discard(assign(_isPondering1)(true))(function () {
                    return discard(liftAff(Effect_Aff.delay(v.value0)))(function () {
                        return discard(assign(_isPondering1)(false))(function () {
                            return discard(Halogen_Query_HalogenM.raise(FinishedPondering.value))(function () {
                                return pure(new Data_Maybe.Just(v.value1));
                            });
                        });
                    });
                });
            };
            throw new Error("Failed pattern match at Test.Component.Counter (line 88, column 43 - line 104, column 25): " + [ v.constructor.name ]);
        })($117));
    };
    var $lazy_handleAction = $runtime_lazy("handleAction", "Test.Component.Counter", function () {
        return function ($119) {
            return outputOnCountChange((function (v) {
                if (v instanceof SetValue) {
                    return for_(Data_Int.fromString(v.value0))(function (i) {
                        return assign(_count2)(i);
                    });
                };
                if (v instanceof Double) {
                    return mulModifying(_count2)(2);
                };
                if (v instanceof Quadruple) {
                    return discard($lazy_handleAction(84)(Double.value))(function () {
                        return $lazy_handleAction(85)(Double.value);
                    });
                };
                throw new Error("Failed pattern match at Test.Component.Counter (line 77, column 44 - line 85, column 28): " + [ v.constructor.name ]);
            })($119));
        };
    });
    var handleAction = $lazy_handleAction(76);
    return {
        initialState: initialState,
        render: render,
        "eval": Halogen_Component.mkEval({
            receive: Halogen_Component.defaultEval.receive,
            initialize: Halogen_Component.defaultEval.initialize,
            finalize: Halogen_Component.defaultEval.finalize,
            handleAction: handleAction,
            handleQuery: handleQuery
        })
    };
};
var component = function (dictMonadAff) {
    return Halogen_Component.mkComponent(componentSpec(dictMonadAff));
};
export {
    _count,
    _isPondering,
    GetCount,
    DoNothing,
    Ponder,
    Increment,
    Decrement,
    SetValue,
    Double,
    Quadruple,
    Equals10,
    FinishedPondering,
    CountChanged,
    component,
    componentSpec,
    initialState,
    render,
    genericAction_,
    eqAction,
    showAction,
    genericOutput_,
    eqOutput,
    showOutput
};
//# sourceMappingURL=index.js.map
