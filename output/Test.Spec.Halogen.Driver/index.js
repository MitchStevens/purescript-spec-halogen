// Generated by purs version 0.15.15
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Category from "../Control.Category/index.js";
import * as Control_Monad_Error_Class from "../Control.Monad.Error.Class/index.js";
import * as Control_Monad_Fork_Class from "../Control.Monad.Fork.Class/index.js";
import * as Control_Monad_Free from "../Control.Monad.Free/index.js";
import * as Control_Monad_Reader_Class from "../Control.Monad.Reader.Class/index.js";
import * as Control_Monad_Reader_Trans from "../Control.Monad.Reader.Trans/index.js";
import * as Control_Monad_State_Class from "../Control.Monad.State.Class/index.js";
import * as Data_Coyoneda from "../Data.Coyoneda/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect from "../Effect/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Aff_Class from "../Effect.Aff.Class/index.js";
import * as Effect_Exception from "../Effect.Exception/index.js";
import * as Halogen_Aff_Driver from "../Halogen.Aff.Driver/index.js";
import * as Halogen_Component from "../Halogen.Component/index.js";
import * as Halogen_Query from "../Halogen.Query/index.js";
import * as Halogen_Query_HalogenM from "../Halogen.Query.HalogenM/index.js";
import * as Halogen_Query_HalogenQ from "../Halogen.Query.HalogenQ/index.js";
import * as Test_Spec from "../Test.Spec/index.js";
var local = /* #__PURE__ */ Control_Monad_Reader_Class.local(/* #__PURE__ */ Control_Monad_Reader_Trans.monadReaderReaderT(Effect_Aff.monadAff));
var pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);
var identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);
var bind = /* #__PURE__ */ Control_Bind.bind(/* #__PURE__ */ Control_Monad_Reader_Trans.bindReaderT(Effect_Aff.bindAff));
var asks = /* #__PURE__ */ Control_Monad_Reader_Class.asks(/* #__PURE__ */ Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff));
var liftAff = /* #__PURE__ */ Effect_Aff_Class.liftAff(/* #__PURE__ */ Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff));
var bind1 = /* #__PURE__ */ Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM);
var get = /* #__PURE__ */ Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM);
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM);
var when = /* #__PURE__ */ Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM);
var pure1 = /* #__PURE__ */ Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM);
var voidLeft = /* #__PURE__ */ Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM);
var map = /* #__PURE__ */ Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM);
var modify = /* #__PURE__ */ Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM);
var throwError = /* #__PURE__ */ Control_Monad_Error_Class.throwError(/* #__PURE__ */ Control_Monad_Reader_Trans.monadThrowReaderT(Effect_Aff.monadThrowAff));
var pure2 = /* #__PURE__ */ Control_Applicative.pure(/* #__PURE__ */ Control_Monad_Reader_Trans.applicativeReaderT(Effect_Aff.applicativeAff));
var bind2 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);
var pure3 = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);
var bracket = /* #__PURE__ */ Control_Monad_Fork_Class.bracket(Control_Monad_Fork_Class.monadBracketAff);
var R = /* #__PURE__ */ (function () {
    function R() {

    };
    R.value = new R();
    return R;
})();
var Trigger = /* #__PURE__ */ (function () {
    function Trigger(value0) {
        this.value0 = value0;
    };
    Trigger.create = function (value0) {
        return new Trigger(value0);
    };
    return Trigger;
})();
var ComponentTell = /* #__PURE__ */ (function () {
    function ComponentTell(value0) {
        this.value0 = value0;
    };
    ComponentTell.create = function (value0) {
        return new ComponentTell(value0);
    };
    return ComponentTell;
})();
var ComponentRequest = /* #__PURE__ */ (function () {
    function ComponentRequest(value0) {
        this.value0 = value0;
    };
    ComponentRequest.create = function (value0) {
        return new ComponentRequest(value0);
    };
    return ComponentRequest;
})();
var ChildTell = /* #__PURE__ */ (function () {
    function ChildTell(value0) {
        this.value0 = value0;
    };
    ChildTell.create = function (value0) {
        return new ChildTell(value0);
    };
    return ChildTell;
})();
var ChildRequest = /* #__PURE__ */ (function () {
    function ChildRequest(value0) {
        this.value0 = value0;
    };
    ChildRequest.create = function (value0) {
        return new ChildRequest(value0);
    };
    return ChildRequest;
})();
var Get = /* #__PURE__ */ (function () {
    function Get(value0) {
        this.value0 = value0;
    };
    Get.create = function (value0) {
        return new Get(value0);
    };
    return Get;
})();
var Modify = /* #__PURE__ */ (function () {
    function Modify(value0) {
        this.value0 = value0;
    };
    Modify.create = function (value0) {
        return new Modify(value0);
    };
    return Modify;
})();
var Triggered = /* #__PURE__ */ (function () {
    function Triggered(value0) {
        this.value0 = value0;
    };
    Triggered.create = function (value0) {
        return new Triggered(value0);
    };
    return Triggered;
})();
var Modified = /* #__PURE__ */ (function () {
    function Modified(value0) {
        this.value0 = value0;
    };
    Modified.create = function (value0) {
        return new Modified(value0);
    };
    return Modified;
})();
var Raised = /* #__PURE__ */ (function () {
    function Raised(value0) {
        this.value0 = value0;
    };
    Raised.create = function (value0) {
        return new Raised(value0);
    };
    return Raised;
})();
var showAugmentedOutput = function (dictShow) {
    var show = Data_Show.show(dictShow);
    return function (dictShow1) {
        var show1 = Data_Show.show(dictShow1);
        return function (dictShow2) {
            var show2 = Data_Show.show(dictShow2);
            return {
                show: function (v) {
                    if (v instanceof Triggered) {
                        return "Triggered " + show1(v.value0);
                    };
                    if (v instanceof Modified) {
                        return "Modified " + show(v.value0);
                    };
                    if (v instanceof Raised) {
                        return "Raised " + show2(v.value0);
                    };
                    throw new Error("Failed pattern match at Test.Spec.Halogen.Driver (line 65, column 10 - line 68, column 46): " + [ v.constructor.name ]);
                }
            };
        };
    };
};
var eqAugmentedOutput = function (dictEq) {
    var eq = Data_Eq.eq(dictEq);
    return function (dictEq1) {
        var eq1 = Data_Eq.eq(dictEq1);
        return function (dictEq2) {
            var eq2 = Data_Eq.eq(dictEq2);
            return {
                eq: function (x) {
                    return function (y) {
                        if (x instanceof Triggered && y instanceof Triggered) {
                            return eq1(x.value0)(y.value0);
                        };
                        if (x instanceof Modified && y instanceof Modified) {
                            return eq(x.value0)(y.value0);
                        };
                        if (x instanceof Raised && y instanceof Raised) {
                            return eq2(x.value0)(y.value0);
                        };
                        return false;
                    };
                }
            };
        };
    };
};
var setTimeout = function (testHalogenM) {
    return function (timeout) {
        return local(function (v) {
            var $87 = {};
            for (var $88 in v) {
                if ({}.hasOwnProperty.call(v, $88)) {
                    $87[$88] = v[$88];
                };
            };
            $87.settings = (function () {
                var $84 = {};
                for (var $85 in v.settings) {
                    if ({}.hasOwnProperty.call(v.settings, $85)) {
                        $84[$85] = v["settings"][$85];
                    };
                };
                $84.timeout = timeout;
                return $84;
            })();
            return $87;
        })(testHalogenM);
    };
};
var runUI = /* #__PURE__ */ (function () {
    var renderSpec = {
        dispose: function (v) {
            return pure(Data_Unit.unit);
        },
        removeChild: function (v) {
            return pure(Data_Unit.unit);
        },
        render: function (v) {
            return function (v1) {
                return function (v2) {
                    return function (v3) {
                        return pure(R.value);
                    };
                };
            };
        },
        renderChild: identity
    };
    return Halogen_Aff_Driver.runUI(renderSpec);
})();
var runAugmentedQuery = function (q) {
    return bind(asks(function (v) {
        return v.io.query;
    }))(function (v) {
        return liftAff(v(q));
    });
};
var mkTestComponent = function (dictEq) {
    var notEq = Data_Eq.notEq(dictEq);
    return function (spec) {
        var checkForStateChange = function (halogenM) {
            return bind1(get)(function (s1) {
                return bind1(halogenM)(function (res) {
                    return bind1(get)(function (s2) {
                        return discard(when(notEq(s1)(s2))(Halogen_Query_HalogenM.raise(new Modified(s2))))(function () {
                            return pure1(res);
                        });
                    });
                });
            });
        };
        var $$eval = function (q) {
            return checkForStateChange((function () {
                if (q instanceof Halogen_Query_HalogenQ.Initialize) {
                    return Halogen_Query_HalogenM.mapOutput(Raised.create)(spec["eval"](new Halogen_Query_HalogenQ.Initialize(q.value0)));
                };
                if (q instanceof Halogen_Query_HalogenQ.Finalize) {
                    return Halogen_Query_HalogenM.mapOutput(Raised.create)(spec["eval"](new Halogen_Query_HalogenQ.Finalize(q.value0)));
                };
                if (q instanceof Halogen_Query_HalogenQ.Receive) {
                    return Halogen_Query_HalogenM.mapOutput(Raised.create)(spec["eval"](new Halogen_Query_HalogenQ.Receive(q.value0, q.value1)));
                };
                if (q instanceof Halogen_Query_HalogenQ.Action) {
                    return discard(Halogen_Query_HalogenM.raise(new Triggered(q.value0)))(function () {
                        return Halogen_Query_HalogenM.mapOutput(Raised.create)(spec["eval"](new Halogen_Query_HalogenQ.Action(q.value0, q.value1)));
                    });
                };
                if (q instanceof Halogen_Query_HalogenQ.Query) {
                    return Data_Coyoneda.unCoyoneda(function (un) {
                        return function (q1) {
                            if (q1 instanceof Trigger) {
                                return $$eval(new Halogen_Query_HalogenQ.Action(q1.value0, q.value1(Data_Unit.unit)));
                            };
                            if (q1 instanceof ComponentTell) {
                                return Halogen_Query_HalogenM.mapOutput(Raised.create)(spec["eval"](new Halogen_Query_HalogenQ.Query(Data_Coyoneda.coyoneda(q.value1)(Halogen_Query.mkTell(q1.value0)), q.value1)));
                            };
                            if (q1 instanceof ComponentRequest) {
                                return Halogen_Query_HalogenM.mapOutput(Raised.create)(spec["eval"](new Halogen_Query_HalogenQ.Query(Data_Coyoneda.coyoneda(un)(Halogen_Query.mkRequest(q1.value0)), q.value1)));
                            };
                            if (q1 instanceof ChildTell) {
                                return voidLeft(Control_Monad_Free.liftF(new Halogen_Query_HalogenM.ChildQuery(Halogen_Query.mkTell(q1.value0))))(q.value1(Data_Unit.unit));
                            };
                            if (q1 instanceof ChildRequest) {
                                return map(un)(Control_Monad_Free.liftF(new Halogen_Query_HalogenM.ChildQuery(Halogen_Query.mkRequest(q1.value0))));
                            };
                            if (q1 instanceof Get) {
                                return map(function ($112) {
                                    return un(q1.value0($112));
                                })(get);
                            };
                            if (q1 instanceof Modify) {
                                return bind1(modify(q1.value0))(function (s) {
                                    return discard(Halogen_Query_HalogenM.raise(new Modified(s)))(function () {
                                        return pure1(q.value1(Data_Unit.unit));
                                    });
                                });
                            };
                            throw new Error("Failed pattern match at Test.Spec.Halogen.Driver (line 111, column 71 - line 126, column 27): " + [ q1.constructor.name ]);
                        };
                    })(q.value0);
                };
                throw new Error("Failed pattern match at Test.Spec.Halogen.Driver (line 101, column 36 - line 126, column 27): " + [ q.constructor.name ]);
            })());
        };
        return Halogen_Component.mkComponent({
            initialState: spec.initialState,
            render: spec.render,
            "eval": $$eval
        });
    };
};
var getComponentState = /* #__PURE__ */ (function () {
    return bind(runAugmentedQuery(new Get(identity)))(function (maybeState) {
        return Data_Maybe["maybe$prime"](function (v) {
            return throwError(Effect_Exception.error("couldn't get State! Should never happen!"));
        })(pure2)(maybeState);
    });
})();
var disposeComponent = function (handle) {
    return handle.io.dispose;
};
var defaultSettings = {
    timeout: 100.0
};
var runComponent = function (dictEq) {
    var mkTestComponent1 = mkTestComponent(dictEq);
    return function (spec) {
        return function (input) {
            return bind2(runUI(mkTestComponent1(spec))(input))(function (v) {
                return pure3({
                    io: {
                        query: v.query,
                        messages: v.messages,
                        dispose: v.dispose
                    },
                    settings: defaultSettings
                });
            });
        };
    };
};
var withComponent = function (dictMonad) {
    var around = Test_Spec.around(dictMonad);
    return function (dictEq) {
        var runComponent1 = runComponent(dictEq);
        return function (spec) {
            return function (input) {
                return around(bracket(runComponent1(spec)(input))(function (v) {
                    return disposeComponent;
                }));
            };
        };
    };
};
export {
    defaultSettings,
    Trigger,
    ComponentTell,
    ComponentRequest,
    ChildTell,
    ChildRequest,
    Get,
    Modify,
    Triggered,
    Modified,
    Raised,
    mkTestComponent,
    setTimeout,
    withComponent,
    disposeComponent,
    runComponent,
    runAugmentedQuery,
    getComponentState,
    R,
    runUI,
    eqAugmentedOutput,
    showAugmentedOutput
};
//# sourceMappingURL=index.js.map
