{"comments":null,"declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[43,42],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[43,1]},"title":"eqPerm"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[47,42],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[45,1]},"title":"ordPerm"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[59,44],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[49,1]},"title":"showPerm"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Semiring"],"Semiring"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[67,43],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[61,1]},"title":"semiringPerm"}],"comments":"A `Perm` value specifies what is allowed to be done with a particular\nfile by a particular class of user &mdash; that is, whether it is\nreadable, writable, and/or executable. It has a `Semiring` instance, which\nallows you to combine permissions:\n\n- `(+)` adds `Perm` values together. For example, `read + write` means\n  \"readable and writable\".\n- `(*)` masks permissions. It can be thought of as selecting only the\n   permissions that two `Perm` values have in common. For example:\n   `(read + write) * (write + execute) == write`.\n\nYou can think also of a `Perm` value as a subset of the set\n`{ read, write, execute }`; then, `(+)` and `(*)` represent set union and\nintersection respectively.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[41,65],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[41,1]},"title":"Perm"},{"children":[],"comments":"Create a `Perm` value. The arguments represent the readable, writable, and\nexecutable permissions, in that order.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[71,48],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[71,1]},"title":"mkPerm"},{"children":[],"comments":"No permissions. This is the identity of the `Semiring` operation `(+)`\nfor `Perm`; that is, it is the same as `zero`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[76,13],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[76,1]},"title":"none"},{"children":[],"comments":"The \"readable\" permission.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[80,13],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[80,1]},"title":"read"},{"children":[],"comments":"The \"writable\" permission.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[84,14],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[84,1]},"title":"write"},{"children":[],"comments":"The \"executable\" permission.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[88,16],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[88,1]},"title":"execute"},{"children":[],"comments":"All permissions: readable, writable, and executable. This is the identity\nof the `Semiring` operation `(*)` for `Perm`; that is, it is the same as\n`one`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[94,12],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[94,1]},"title":"all"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perms"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[102,44],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[102,1]},"title":"eqPerms"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perms"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[106,42],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[104,1]},"title":"ordPerms"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perms"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[117,31],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[108,1]},"title":"showPerms"}],"comments":"A `Perms` value includes all the permissions information about a\nparticular file or directory, by storing a `Perm` value for each of the\nfile owner, the group, and any other users.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[100,58],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[100,1]},"title":"Perms"},{"children":[],"comments":"Create a `Perms` value. The arguments represent the owner's, group's, and\nother users' permission sets, respectively.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perm"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perms"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[151,41],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[151,1]},"title":"mkPerms"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Perms"],"Perms"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[154,18],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[154,1]},"title":"permsAll"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Perms"],"Perms"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[157,24],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[157,1]},"title":"permsReadWrite"},{"children":[],"comments":"Attempt to parse a `Perms` value from a `String` containing an octal\ninteger. For example,\n`permsFromString \"0644\" == Just (mkPerms (read + write) read read)`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perms"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[122,41],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[122,1]},"title":"permsFromString"},{"children":[],"comments":"Convert a `Perms` value to an octal string, in a format similar to that\naccepted by `chmod`. For example:\n`permsToString (mkPerms (read + write) read read) == \"0644\"`\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perms"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[178,33],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[178,1]},"title":"permsToString"},{"children":[],"comments":"Convert a `Perms` value to an `Int`, via `permsToString`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Perms"],"Perms"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[186,27],"name":".spago/p/node-fs-9.2.0/src/Node/FS/Perms.purs","start":[186,1]},"title":"permsToInt"}],"name":"Node.FS.Perms","reExports":[]}