// Generated by purs version 0.15.15
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Error_Class from "../Control.Monad.Error.Class/index.js";
import * as Data_Argonaut_Core from "../Data.Argonaut.Core/index.js";
import * as Data_Argonaut_Decode_Class from "../Data.Argonaut.Decode.Class/index.js";
import * as Data_Argonaut_Decode_Decoders from "../Data.Argonaut.Decode.Decoders/index.js";
import * as Data_Argonaut_Decode_Error from "../Data.Argonaut.Decode.Error/index.js";
import * as Data_Argonaut_Encode_Class from "../Data.Argonaut.Encode.Class/index.js";
import * as Data_Argonaut_Encode_Encoders from "../Data.Argonaut.Encode.Encoders/index.js";
import * as Data_Argonaut_Parser from "../Data.Argonaut.Parser/index.js";
import * as Data_DateTime_Instant from "../Data.DateTime.Instant/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Map_Internal from "../Data.Map.Internal/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Number from "../Data.Number/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_Time_Duration from "../Data.Time.Duration/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as Effect_Now from "../Effect.Now/index.js";
import * as Node_Encoding from "../Node.Encoding/index.js";
import * as Node_FS_Aff from "../Node.FS.Aff/index.js";
import * as Test_Spec_Result from "../Test.Spec.Result/index.js";
import * as Test_Spec_Tree from "../Test.Spec.Tree/index.js";
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showNumber);
var unwrap = /* #__PURE__ */ Data_Newtype.unwrap();
var bind = /* #__PURE__ */ Control_Bind.bind(Data_Either.bindEither);
var mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Maybe.functorMaybe);
var bind1 = /* #__PURE__ */ Control_Bind.bind(Data_Maybe.bindMaybe);
var wrap = /* #__PURE__ */ Data_Newtype.wrap();
var timestampIsSymbol = {
    reflectSymbol: function () {
        return "timestamp";
    }
};
var successIsSymbol = {
    reflectSymbol: function () {
        return "success";
    }
};
var pure = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);
var unions = /* #__PURE__ */ Data_Map_Internal.unions(Data_Ord.ordString)(Data_Foldable.foldableArray);
var map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);
var bind2 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);
var map1 = /* #__PURE__ */ Data_Functor.map(Effect_Aff.functorAff);
var liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
var union = /* #__PURE__ */ Data_Map_Internal.union(Data_Ord.ordString);
var Timestamp = function (x) {
    return x;
};
var newtypeTimestamp_ = {
    Coercible0: function () {
        return undefined;
    }
};
var encodeJsonTimestamp = {
    encodeJson: function (v) {
        return Data_Argonaut_Encode_Encoders.encodeString(show(unwrap(Data_DateTime_Instant.unInstant(v))));
    }
};
var encodeJson = /* #__PURE__ */ Data_Argonaut_Encode_Class.encodeJson(/* #__PURE__ */ Data_Argonaut_Encode_Class.encodeMap(Data_Ord.ordString)(Data_Argonaut_Encode_Class.encodeJsonJString)(/* #__PURE__ */ Data_Argonaut_Encode_Class.encodeRecord(/* #__PURE__ */ Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJBoolean)(/* #__PURE__ */ Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeJsonTimestamp)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(timestampIsSymbol)())(successIsSymbol)())()));
var decodeJsonTimestamp = {
    decodeJson: function (j) {
        return bind(Data_Argonaut_Decode_Decoders.decodeString(j))(function (str) {
            return Data_Either.note(new Data_Argonaut_Decode_Error.UnexpectedValue(j))(mapFlipped(bind1(mapFlipped(Data_Number.fromString(str))(Data_Time_Duration.Milliseconds))(Data_DateTime_Instant.instant))(wrap));
        });
    }
};
var decodeJson = /* #__PURE__ */ Data_Argonaut_Decode_Class.decodeJson(/* #__PURE__ */ Data_Argonaut_Decode_Class.decodeMap(Data_Ord.ordString)(Data_Argonaut_Decode_Class.decodeJsonString)(/* #__PURE__ */ Data_Argonaut_Decode_Class.decodeRecord(/* #__PURE__ */ Data_Argonaut_Decode_Class.gDecodeJsonCons(/* #__PURE__ */ Data_Argonaut_Decode_Class.decodeFieldId(Data_Argonaut_Decode_Class.decodeJsonBoolean))(/* #__PURE__ */ Data_Argonaut_Decode_Class.gDecodeJsonCons(/* #__PURE__ */ Data_Argonaut_Decode_Class.decodeFieldId(decodeJsonTimestamp))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(timestampIsSymbol)()())(successIsSymbol)()())()));
var persistFileName = ".spec-results";
var lastPersistedResults = /* #__PURE__ */ (function () {
    var readFile = Data_Functor.mapFlipped(Effect_Aff.functorAff)(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)(persistFileName))(function (text) {
        return Data_Maybe.fromMaybe(Data_Map_Internal.empty)(bind1(Data_Either.hush(Data_Argonaut_Parser.jsonParser(text)))(function ($73) {
            return Data_Either.hush(decodeJson($73));
        }));
    });
    return Control_Monad_Error_Class.catchError(Effect_Aff.monadErrorAff)(readFile)(function (v) {
        return pure(Data_Map_Internal.empty);
    });
})();
var persistResults = function (trees) {
    var serializeRun = function (now) {
        return function (v) {
            if (v instanceof Test_Spec_Tree.Node) {
                return unions(map(serializeRun(now))(v.value1));
            };
            if (v instanceof Test_Spec_Tree.Leaf && v.value1 instanceof Data_Maybe.Nothing) {
                return Data_Map_Internal.empty;
            };
            if (v instanceof Test_Spec_Tree.Leaf && v.value1 instanceof Data_Maybe.Just) {
                return Data_Map_Internal.singleton(Data_String_Common.joinWith(" ")(append(Test_Spec_Tree.parentSuiteName(v.value0.value1))([ v.value0.value0 ])))({
                    timestamp: now,
                    success: (function () {
                        if (v.value1.value0 instanceof Test_Spec_Result.Success) {
                            return true;
                        };
                        if (v.value1.value0 instanceof Test_Spec_Result.Failure) {
                            return false;
                        };
                        throw new Error("Failed pattern match at Test.Spec.Runner.Node.Persist (line 65, column 22 - line 67, column 38): " + [ v.value1.value0.constructor.name ]);
                    })()
                });
            };
            throw new Error("Failed pattern match at Test.Spec.Runner.Node.Persist (line 56, column 24 - line 68, column 12): " + [ v.constructor.name ]);
        };
    };
    return bind2(map1(Timestamp)(liftEffect(Effect_Now.now)))(function (now) {
        var currentRun = unions(map(serializeRun(now))(Test_Spec_Tree.annotateWithPaths(trees)));
        return bind2(lastPersistedResults)(function (lastRun) {
            return Node_FS_Aff.writeTextFile(Node_Encoding.UTF8.value)(persistFileName)(Data_Argonaut_Core.stringifyWithIndent(2)(encodeJson(union(currentRun)(lastRun))));
        });
    });
};
export {
    Timestamp,
    persistResults,
    lastPersistedResults,
    persistFileName,
    newtypeTimestamp_,
    decodeJsonTimestamp,
    encodeJsonTimestamp
};
//# sourceMappingURL=index.js.map
